
1. Download the latest release of IDA solver from SUNDIALS package in https://computing.llnl.gov/projects/sundials/sundials-software
% wget "https://github.com/LLNL/sundials/releases/download/v6.3.0/sundials-6.3.0.tar.gz"

2. Extract the corresponding compressed file
% tar -xzf sundials-6.3.0.tar.gz

3. Read INSTALL_GUIDE.pdf and follow the installation instructions. Roughly, do the following:
Make a directory outside the sundials-6.3.0 folder and enter it, and make the install and build dirs, enter the build dir.
% mkdir sundials
% cd sundials
% mkdir instdir
% mkdir buildir
% cd /buildir
NOTE if you need to recompile after a system upgrade, delete the contents of these directories before running cmake in the next step!

4. Since in SUMMA-SUNDIALS utilizes the Fortran/C interface FIDA, the following setting needs to be enabled, as well as the setting the install directory, while running the cmake inside the builddir, using your home directory as $(YOUR_HOME)
% cmake ../sundials-5.8.0/ -DBUILD_FORTRAN_MODULE_INTERFACE=ON DCMAKE_INSTALL_PREFIX=$(YOUR_HOME)/sundials/instdir -DEXAMPLES_INSTALL_PATH=$(YOUR_HOME)/sundials/instdir/examples

5. The default compiler is gfortran. To change it (it should be the same as the netcdf build and the later summa build), you could also add the following option to cmake with your $(YOUR_GFORTRAN)
   -DCMAKE_Fortran_COMPILER=$(YOUR_GFORTRAN)

You can do 4 and 5 by running from inside buildir:
cp ../../summa/build/makefiles/build_cmakeSundials build_cmake
./build_cmake


6. If the above went well, staying in the buildir directory run
% make
% make install

7. Enter summa directory and build summa as in /docs/SUMMA_installation.md. You will have to edit the SUMMA Makefile as below additionally (as well as install required libraries and link them as directed in the Makefile). You need to clone summa before you can change the makefile
	git clone https://git.cs.usask.ca/numerical_simulations_lab/summa.git


8. In SUMMA Makefile, define the FC_EXE to be the same compiler as you used for sundials and netcdf
   
9. In SUMMA Makefile, define the SUNDIALS installation directory (and all the folders as required in the SUMMA instructions.
	DIR_SUNDIALS=$(YOUR_HOME)/sundials/instdir

10. Inside the /summa/build/ directory run
% make
or % source build_summa_* if you are using a specific * compiler

11. On some installations you may need to add to your .bashrc file (and run source .bashrc)
LD_LIBRARY_PATH='$(YOUR_HOME)/sundials/instdir/lib64'
export LD_LIBRARY_PATH


NOTE. If you'd like to print the Jacobians going into the Sundials IDA solver, you need to do the following

1. to file sundials-6.3.0/src/ida/ida_ls.c around line 1345, should be after:

    /* Call Jacobian routine */
    retval = idals_mem->jac(IDA_mem->ida_tn, IDA_mem->ida_cj, y,
                            yp, r, idals_mem->J,
                            idals_mem->J_data, vt1, vt2, vt3);

THEN ADD:

    /* PRINT JACOBIAN*/
    doprint = 1;
    if (doprint == 1) {
      printf("Initial Jacobian");
      SUNDenseMatrix_Print(idals_mem->J,stdout);
      SUNBandMatrix_Print(idals_mem->J,stdout);
    }

2. You will also need to add the parameter doprint, so in that file at line 1302 it should read

  IDALsMem idals_mem;
  int      doprint, retval;

3. Now, you can get the printing by toggling on (doprint=1) or off (doprint=0) this, and recompiling sundials with make; make install inside buildir. 

This will make output files very large, so only use for testing. 
If you want to print Finite Difference Jacobians and not the analytical Jacobian, you need to comment out the second line here (around line 373) in  summa/build/source/engine/summaSolveSundialsIDA.f90

  !comment this line out to use FD Jacobian
  retval = FIDASetJacFn(ida_mem, c_funloc(evalJac4IDA))
