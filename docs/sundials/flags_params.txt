
To switch between SUMMA-BE and SUMMA-SUNDIALS, the "num_method" variable is used in the var_lookup module. 
A user should add this variable to the model_decision file with one of the values "bEuler" (backwards compatible with "itertive" or "sundials".

In energy equation, the heat capacity is computed using either the analytical (closed) formula or the finite differece formula (dH_T/dT). The
"howHeatCap" varialbe has been added to the var_lookup module to handle such decision. A user should add this variable to the model_decision
file with one of the values "closedForm" or "enthalpyFD". For now, this value is by default "colsedForm" in mDecisions.f90. 

All SUMMA-SUNDIALS files are in build/source/engine. The important ones are as following:

systemSolvSundials.f90: contains public subroutine systemSolvSundials which runs the coupled energy-mass model for one timestep

summaSolveSundialsIDA.f90: contains public subroutine summaSolveSundialsIDA which solves the differential equation system F(y,y') = 0 by IDA 
                (y is the state vector) and private subroutines setInitialCondition and setSolverParams. 
                setSolverParams can be used to to set parameters (maximum order, number of nonlinear iteration , etc) in IDA solver.

eval8summaSundials.f90: contains public subroutine eval8summaSundials which computes the residual vector F(t,y,y')
                mainly by calling varExtract, updateVarsSundials, computFlux, and computResidSundials. We also switch between different forms 
                of the energy equation in this subroutine. It also contains public function eval8summa4IDA which is the interface wrapper for 
                computing the residual vector required for the IDA solver.

computJacobSundials.f90: contains public subroutine computJacobSundials which computes the Jacobian matrix dF/dy + c dF/dy'. It also contains 
                the public function computJacob4IDA which is the interface wrapper for computing the Jacobian matrix required for the IDA solver.

